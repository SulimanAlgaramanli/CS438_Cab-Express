@startuml

class LocationService {
    - LocationModel _location

    + Future<bool> requestPermission()
    + Future<PermissionStatus> checkPermission()
    + Future<bool> requestService()
    + Future<bool> isServiceEnabled()
    + Future<LocationData?> getLocation()
    + Stream<LocationData>? getLocationStream()
    + Future<bool> changeSettings(...)
    + Future<LocationModel?> getLocationInfo()
}

class LocationServicesController {
    - LocationServicesControllerState state

    + LocationService get _locationService
    + bool get permissionGranted
    + set permissionGranted(bool value)
    + bool get serviceEnabled
    + set serviceEnabled(bool value)

    + Future<void> checkPermissions()
    + Future<bool> requestPermissions()
    + Future<bool> requestService()
    + Future<LocationModel?> getLocation()
}

class LocationServicesControllerState {
    - LocationService locationService
    - RxBool _permissionGranted
    - RxBool _serviceEnabled

    + LocationService get locationService
    + bool get permissionGranted
    + set permissionGranted(bool value)
    + bool get serviceEnabled
    + set serviceEnabled(bool value)
}

class LocationModel {
    - int? id
    - double? long
    - double? lat

    + String get locationText
    + Map<String, dynamic> toMap()
    + factory LocationModel.fromMap(Map<String, dynamic>? map)
    + Map<String, dynamic> toJson()
}

class CustomerHomeScreenControllerLogic {
    - LocationServiceController locationService
    - CustomerHomeScreenControllerState state
    - Rx<States> locationStates

    + Future<void> onGetLocationPressed()
}

LocationServicesController *-- LocationServicesControllerState
CustomerHomeScreenControllerLogic *-- LocationServicesController
CustomerHomeScreenControllerLogic *-- CustomerHomeScreenControllerState
LocationServicesController *-- LocationService
LocationService *-- LocationModel
@enduml
